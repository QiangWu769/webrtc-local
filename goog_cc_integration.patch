--- a/src/modules/congestion_controller/goog_cc/goog_cc_network_control.cc
+++ b/src/modules/congestion_controller/goog_cc/goog_cc_network_control.cc
@@ -152,10 +152,25 @@ GoogCcNetworkController::GoogCcNetworkController(NetworkControllerConfig config
       env_.field_trials().Lookup("WebRTC-Bwe-SafeResetOnRouteChange"));
   if (delay_based_bwe_)
     delay_based_bwe_->SetMinBitrate(kCongestionControllerMinBitrate);
+  
+  // Initialize cellular ratio receiver if enabled
+  // Note: Can be enabled via field trial "WebRTC-EnableCellularRatio" or always on for testing
+  bool enable_cellular_ratio = true; // Always enable for testing
+  // bool enable_cellular_ratio = env_.field_trials().IsEnabled("WebRTC-EnableCellularRatio");
+  
+  if (enable_cellular_ratio && delay_based_bwe_) {
+    RTC_LOG(LS_INFO) << "[GoogCC] Initializing CellularRatioReceiver";
+    cellular_ratio_receiver_ = std::make_unique<CellularRatioReceiver>(
+        config.task_queue, delay_based_bwe_.get());
+    
+    if (!cellular_ratio_receiver_->Start()) {
+      RTC_LOG(LS_ERROR) << "[GoogCC] Failed to start CellularRatioReceiver";
+      cellular_ratio_receiver_.reset();
+    } else {
+      RTC_LOG(LS_INFO) << "[GoogCC] CellularRatioReceiver started successfully";
+    }
+  }
 }
 
-GoogCcNetworkController::~GoogCcNetworkController() {}
+GoogCcNetworkController::~GoogCcNetworkController() {
+  // Stop cellular receiver if running
+  if (cellular_ratio_receiver_) {
+    RTC_LOG(LS_INFO) << "[GoogCC] Stopping CellularRatioReceiver";
+    cellular_ratio_receiver_->Stop();
+  }
+}